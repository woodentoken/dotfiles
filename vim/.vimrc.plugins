"_________________________________________________________________________________________
"_____/__/\_____________________/__/\_________/__/\_____________________/__/\_________/__/\
"____/__/::\____________________\__\:\_______/__/:/_______/__/\_________\__\:\_______/__/:/_
"___/__/:/\:\____________________\__\:\_____/__/:/_/\____/__/:/__________\__\:\_____/__/:/_/\
"__/__/:/~/:/_/__/\___/__/\_______\__\:\___/__/:/_/::\__/__/::\___________\__\:\___/__/:/_/::\
"_/__/:/_/:/__\__\:\_/__/:/_/__/\__\__\:\_/__/:/__\/\:\_\__\/\:\____/__/::::::::\_/__/:/_/:/\:\
"_\__\:\/:/____\__\:\__/:/__\__\:\_/__/:/_\__\:\_/~~/:/____\__\:\/\_\__\:\~~\~~\/_\__\:\/:/~/:/
"__\__\::/______\__\:\/:/____\__\:\__/:/___\__\:\__/:/______\__\::/__\__\:\__~~~___\__\::/_/:/
"___\__\:\_______\__\::/______\__\:\/:/_____\__\:\/:/_______/__/:/____\__\:\________\__\/_/:/
"____\__\:\_______\__\/________\__\::/_______\__\::/________\__\/______\__\:\_________/__/:/
"_____\__\/_____________________\__\/_________\__\/_____________________\__\/_________\__\/

set number
set nocompatible              " be iMproved, required
filetype off                  " required

" let coc and ale work together
let g:ale_disable_lsp = 1

let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
	  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
	    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" set the runtime path to include Plug and initialize
set rtp+=~/.vim/autoload/plug.vim
call plug#begin()

" //////////////////////////////////
"             PLUGINS
" //////////////////////////////////
" {{ GIT }}
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'

" {{ APPEARANCE }}
Plug 'luochen1990/rainbow'
Plug 'morhetz/gruvbox'
Plug 'sainnhe/gruvbox-material'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'yggdroot/indentline'

" {{ FUNCTIONALITY }}
"   {{ HIGH LEVEL }}
Plug 'junegunn/fzf', { 'do': { -> fzf-install() } }
Plug 'junegunn/fzf.vim'
Plug 'mbbill/undotree'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'scrooloose/nerdtree'
Plug 'tpope/vim-eunuch'
Plug 'yegappan/mru'

"   {{ LOW LEVEL }}
Plug 'SirVer/ultisnips'
Plug 'justinmk/vim-sneak'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'terryma/vim-expand-region'
Plug 'wellle/targets.vim'
Plug 'github/copilot.vim'

" {{ LANGUAGE SPECIFIC }}
Plug 'pangloss/vim-javascript'
" Plug 'python-mode/python-mode', { 'for': 'python', 'branch': 'develop' }

" {{ LINT/QUALITY }}
Plug 'dense-analysis/ale'
Plug 'tpope/vim-dispatch'

call plug#end()              " required
filetype plugin indent on    " required

" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
"         PLUGIN SETTINGS
" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

" |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
" || GIT ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
" |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
" -------------------------------------------------------------
" { airblade/vim-gitgutter }
" -------------------------------------------------------------
let g:gitgutter_async=0
let g:gitgutter_realtime=1
let g:gitgutter_eager=1
let g:gitgutter_max_signs = 500
" No mapping
let g:gitgutter_map_keys = 0
" Colors
let g:gitgutter_override_sign_column_highlight = 0

" -------------------------------------------------------------
" { tpope/vim-fugitive }
" -------------------------------------------------------------
set statusline+=%FugitiveStatusline()

" |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
" || APPEARANCE |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
" |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
source ~/.vimrc.colorschemes
" -------------------------------------------------------------
" { luochen1990/rainbow }
" -------------------------------------------------------------
let g:rainbow_active = 1
let g:rainbow_conf = {
      \ 'guifgs':   ['aquamarine1', 'steelblue1', 'slateblue1', 'purple', 'deeppink3', 'deeppink2'],
      \ 'ctermfgs': [40,            75,           99,           129,      162,         197]
      \}
" -------------------------------------------------------------
" { morhetz/gruvbox }
" -------------------------------------------------------------
" -------------------------------------------------------------
" { sainnhe/gruvbox-material }
" -------------------------------------------------------------
" -------------------------------------------------------------
" { vim-airline/vim-airline }
" -------------------------------------------------------------
let g:airline_section_b=''
let g:airline_section_y=''
" let g:airline_statusline_ontop=1
" let g:airline#extensions#tabline#enabled = 1
" or copy paste the following into your vimrc for shortform text
let g:airline_mode_map = {
      \ '__'     : '-',
      \ 'c'      : 'C',
      \ 'i'      : 'I',
      \ 'ic'     : 'I',
      \ 'ix'     : 'I',
      \ 'n'      : 'N',
      \ 'multi'  : 'M',
      \ 'ni'     : 'N',
      \ 'no'     : 'N',
      \ 'R'      : 'R',
      \ 'Rv'     : 'R',
      \ 's'      : 'S',
      \ 'S'      : 'S',
      \ ''     : 'S',
      \ 't'      : 'T',
      \ 'v'      : 'V',
      \ 'V'      : 'V',
      \ ''     : 'V',
      \ }
" Note: 'multi' is for displaying the multiple cursor mode

" -------------------------------------------------------------
" { vim-airline/vim-airline-themes }
" -------------------------------------------------------------
let g:airline_theme='gruvbox_material'
" -------------------------------------------------------------
" { yggdroot/indentline }
" -------------------------------------------------------------
let g:indentLine_char_list = ['0','1','2','3','4','5','6','7','8','9']
let g:indentLine_color_term = 239

" |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
" || FUNCTIONALITY ||||||||||||||||||||||||||||||||||||||||||||||||||||||||
" |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
" ////////////////////////////////////////////////////////////////////
" ///// HIGH LEVEL //////////////////////////////////////////////////
" //////////////////////////////////////////////////////////////////
" -------------------------------------------------------------
"     { junegunn/fzf }
" -------------------------------------------------------------
nnoremap <C-P> :FZF<CR>
if has('unix')
    let $FZF_DEFAULT_COMMAND='find . \! \( -type d -path ./.git -prune \) \! -type d -printf ''%P\n'''
else
    let $FZF_DEFAULT_COMMAND='Get-ChildItem -Recurse -Exclude .git -File -Name' "untested
endif
let g:fzf_layout = { 'window': { 'width': 0.75, 'height': 0.75 } }
let g:fzf_colors =
      \ { 'fg':    ['fg', 'Normal'],
      \ 'bg':      ['bg', 'Normal'],
      \ 'hl':      ['fg', 'Comment'],
      \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
      \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
      \ 'hl+':     ['fg', 'Statement'],
      \ 'info':    ['fg', 'PreProc'],
      \ 'border':  ['fg', 'Ignore'],
      \ 'prompt':  ['fg', 'Conditional'],
      \ 'pointer': ['fg', 'Exception'],
      \ 'marker':  ['fg', 'Keyword'],
      \ 'spinner': ['fg', 'Label'],
      \ 'header':  ['fg', 'Comment'] }
" -------------------------------------------------------------
" { mbbill/undotree }
" -------------------------------------------------------------
nnoremap <leader>u :UndotreeToggle<CR>
nnoremap <leader>y :UndotreeFocus<CR>
let g:undotree_SetFocusWhenToggle = 1
let g:undotree_WindowLayout = 3
if has("persistent_undo")
   let target_path = expand('~/.undodir')

    " create the directory and any parent directories
    " if the location does not exist.
    if !isdirectory(target_path)
        call mkdir(target_path, "p", 0700)
    endif

    let &undodir=target_path
    set undofile
endif
" -------------------------------------------------------------
" { neoclide/coc.nvim }
" -------------------------------------------------------------
source ~/.vimrc.coc
" -------------------------------------------------------------
" { scrooloose/nerdtree }
" -------------------------------------------------------------
nnoremap <leader>n :NERDTreeToggle<CR>
" -------------------------------------------------------------
" { tpope/vim-eunuch }
" -------------------------------------------------------------
" -------------------------------------------------------------
" { yegappan/mru }
" -------------------------------------------------------------
nnoremap <leader>h :MRU<CR>
nnoremap <leader>m :MRU<CR>
"
" ////////////////////////////////////////////////////////////////////
" ////// LOW LEVEL //////////////////////////////////////////////////
" //////////////////////////////////////////////////////////////////
" -------------------------------------------------------------
"     { SirVer/ultisnips }
" -------------------------------------------------------------
let g:UltiSnipsExpandTrigger = '<c-y>'
let g:UltiSnipsJumpForwardTrigger = '<c-n>'
let g:UltiSnipsJumpBackwardTrigger = '<c-p>'
let g:UltiSnipsSnippetDirectories=["UltiSnips", ".vimrc.snippets"]

" -------------------------------------------------------------
"     { justinmk/vim-sneak }
" -------------------------------------------------------------
" -------------------------------------------------------------
"     { tpope/vim-surround }
" -------------------------------------------------------------
" -------------------------------------------------------------
"     { tpope/vim-commentary }
" -------------------------------------------------------------
nnoremap <C-\> :Commentary<CR>
vnoremap <C-\> :Commentary<CR>

" -------------------------------------------------------------
"     { wellle/targets.vim }
" -------------------------------------------------------------
" -------------------------------------------------------------
"     { woodentoken/vim-snippets }
" -------------------------------------------------------------

" |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
" || LANGUAGE SPECIFIC ||||||||||||||||||||||||||||||||||||||||||||||||||||
" |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
" -------------------------------------------------------------
" { pangloss/vim-javascript }
" -------------------------------------------------------------
" -------------------------------------------------------------
" { python-mode/python-mode }
" -------------------------------------------------------------
let g:pymode_lint_cwindow = 0
let g:pymode_lint_message = 1
let g:pymode_lint_on_fly = 1
let g:pymode_lint_unmodified = 1
" avoid line too long warnings (E501)
let g:pymode_lint_ignore = ["E501", "E116", "C0116", "C0114", "C0115",]
" let g:pymode_lint_ignore = ["E501", "E116", "E0602", "F405", "F403", "C0116", "C0114", "C0115",]
let g:pymode_lint_todo_symbol = 'WW'
let g:pymode_lint_comment_symbol = 'CC'
let g:pymode_lint_visual_symbol = 'RR'
let g:pymode_lint_error_symbol = 'EE'
let g:pymode_lint_info_symbol = 'II'
let g:pymode_lint_pyflakes_symbol = 'FF'
let g:pymode_python = 'python3'
nnoremap <leader>pf :PymodeLintAuto<CR>

" |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
" || LINT/QUALITY |||||||||||||||||||||||||||||||||||||||||||||||||||||||||
" |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
" -------------------------------------------------------------
"   { dense-analysis/ale }
" -------------------------------------------------------------
nnoremap <leader>af :ALEFix<CR>
nnoremap <leader>at :ALEToggle<CR>
let g:ale_virtualtext_cursor = 'current'
" disable ALE on python files
let g:ale_pattern_options = {
      \   '.*\.py$': {'ale_enabled': 0},
      \}
" -------------------------------------------------------------
"   { tpope/vim-dispatch }
" -------------------------------------------------------------
