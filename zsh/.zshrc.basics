#                    ___           ___                       ___           ___
#     _____         /  /\         /  /\        ___          /  /\         /  /\
#    /  /::\       /  /::\       /  /:/_      /  /\        /  /:/        /  /:/_
#   /  /:/\:\     /  /:/\:\     /  /:/ /\    /  /:/       /  /:/        /  /:/ /\
#  /  /:/~/::\   /  /:/~/::\   /  /:/ /::\  /__/::\      /  /:/  ___   /  /:/ /::\
# /__/:/ /:/\:| /__/:/ /:/\:\ /__/:/ /:/\:\ \__\/\:\__  /__/:/  /  /\ /__/:/ /:/\:\
# \  \:\/:/~/:/ \  \:\/:/__\/ \  \:\/:/~/:/    \  \:\/\ \  \:\ /  /:/ \  \:\/:/~/:/
#  \  \::/ /:/   \  \::/       \  \::/ /:/      \__\::/  \  \:\  /:/   \  \::/ /:/
#   \  \:\/:/     \  \:\        \__\/ /:/       /__/:/    \  \:\/:/     \__\/ /:/
#    \  \::/       \  \:\         /__/:/        \__\/      \  \::/        /__/:/
#     \__\/         \__\/         \__\/                     \__\/         \__\/
# _________________________________________________________________________________
#
# Set up the prompt
autoload -Uz promptinit
promptinit

setopt histignorealldups sharehistory

# quicker grep alias that we don't need to type the flags for
function gep { grep -rnIi "$1" . --color }
alias gp=gep

function get { find . -name "*$2" -exec grep --color "$1" {} + }
alias gt=get

# file a command in the grep history
alias gh='history | grep'

# Use emacs keybindings even if our EDITOR is set to vi
bindkey -e

# rebind U (to go *U*p) and L (to clear *L*ine), and I (to accept autosuggestions)
bindkey "^U" clear-screen
bindkey "^L" kill-whole-line


# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=5000
SAVEHIST=5000
HISTFILE=~/.zsh_history

# CONDA
alias ci='conda info --envs'
#create environment
condae () {
  cur_dir=$(basename "$PWD")
  conda create -n $cur_dir
  echo "$cur_dir" >> .conda_config
}
alias coa='conda activate'
alias cod='conda deactivate'
alias con='$(basename $PWD) > .conda_config'

# PYTHON
alias py='python3'
alias py3='python3'
alias python='python3'

# PIP
alias pi='pip install'
alias par='pip-autoremove'
alias pu='pip uninstall'
alias pl='pip list'

# VIRTUALENV
alias ven12='python3.12 -m venv .venv'
alias ven11='python3.11 -m venv .venv'
alias ven='python -m venv .venv'
alias veh='ls -l $WORKON_HOME'
alias vea='source ./.venv/bin/activate'
alias ved='deactivate'
alias vel='lsvirtualenv'
alias vei='lssitepackages'


## MANAGE DIRECTORIES
# create a directory `$1` and cd into it
take () {
  mkdir $1 && cd $1
}

alias rd=rmdir # this only removes empty directories!
alias md='mkdir -p'
alias td='take'

# manage cd history as a stack
setopt CDABLE_VARS                 # expand the expression (allows 'cd -2/tmp')
setopt AUTO_CD
setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS
setopt PUSHDMINUS

# quickly jump backwards
alias -g ...='../..'
alias -g ....='../../..'
alias -g .....='../../../..'
alias -g ......='../../../../..'

# allow `-<NUMBER>` to move in the stack
# this allows you to type - to see your stack of recent directories (labelled numerically)
# execute -x to move to the xth entry of the directory stack. 1 < x < 99
# `-` without a number will go back to the previous directory
# `d` shows the entire directory stack
alias d='dirs -v'
for index ({1..99}) alias "-$index"="cd -${index}"; unset index
zstyle ':completion:*:directory-stack' list-colors '=(#b) #([0-9]#)*( *)==95=38;5;12'

# kill all background jobs
alias kbg='kill ${${(v)jobstates##*:*:}%=*}'

# theoretically launch bspwm on login
if [ -z "${DISPLAY}" ] && [ "${XDG_VTNR}" -eq 1 ]; then
   exec startx
fi

# -----------------------------------------------------------------------------
# FZF
# -----------------------------------------------------------------------------
export FZF_DEFAULT_OPTS="--layout=reverse --header-first --color 16 --height 50% --info=inline"

# Preview file content using bat (https://github.com/sharkdp/bat)
export FZF_CTRL_T_OPTS="
  --preview 'batcat -n --color=always {}'
  --bind 'ctrl-/:change-preview-window(down|hidden|)'
  --header 'FILE BROWSER"

# CTRL-Y to copy the command into clipboard using pbcopy
export FZF_CTRL_R_OPTS="--nth 2..
  --bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort'
  --color header:italic
  --history-size=1024
  --header 'REVERSE HISTORY"

# Print tree structure in the preview window
export FZF_ALT_C_OPTS="
  --preview 'tree -C {}'
  --header 'DIR NAVIGATOR"

export FZF_COMPLETION_TRIGGER='~'

source /usr/share/doc/fzf/examples/key-bindings.zsh
source /usr/share/doc/fzf/examples/completion.zsh

bindkey "$key[Up]" fzf-history-widget
bindkey "$key[Down]" fzf-history-widget
bindkey '^P' fzf-dir-navigator
bindkey '^F' fzf-file-widget

## COMPLETION SETTINGS
# NOTE: some of the completion settings are in the .zshrc.plugins file due to the autocomplete plugin there
bindkey "^I" complete-word
bindkey "^[[Z" autosuggest-accept
autoload -U compinit && compinit   # load + start completion

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format '>$ %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=short
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
