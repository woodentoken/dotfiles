#      ___                       ___           ___                       ___           ___
#     /  /\                     /__/\         /  /\        ___          /__/\         /  /\
#    /  /::\                    \  \:\       /  /:/_      /  /\         \  \:\       /  /:/_
#   /  /:/\:\  ___     ___       \  \:\     /  /:/ /\    /  /:/          \  \:\     /  /:/ /\
#  /  /:/~/:/ /__/\   /  /\  ___  \  \:\   /  /:/_/::\  /__/::\      _____\__\:\   /  /:/ /::\
# /__/:/ /:/  \  \:\ /  /:/ /__/\  \__\:\ /__/:/__\/\:\ \__\/\:\__  /__/::::::::\ /__/:/ /:/\:\
# \  \:\/:/    \  \:\  /:/  \  \:\ /  /:/ \  \:\ /~~/:/    \  \:\/\ \  \:\~~\~~\/ \  \:\/:/~/:/
#  \  \::/      \  \:\/:/    \  \:\  /:/   \  \:\  /:/      \__\::/  \  \:\  ~~~   \  \::/ /:/
#   \  \:\       \  \::/      \  \:\/:/     \  \:\/:/       /__/:/    \  \:\        \__\/ /:/
#    \  \:\       \__\/        \  \::/       \  \::/        \__\/      \  \:\         /__/:/
#     \__\/                     \__\/         \__\/                     \__\/         \__\/
# _____________________________________________________________________________________________
#

# use ./update_or_install_zsh_plugins.sh to keep these up to date

# -----------------------------------------------------------------------------
# ZSH AUTOSUGGEST (https://github.com/zsh-users/zsh-autosuggestions)
# -----------------------------------------------------------------------------
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=15'
ZSH_AUTOSUGGEST_STRATEGY=(completion)
source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh

# -----------------------------------------------------------------------------
# ZSH AUTOCOMPLETE (https://github.com/marlonrichert/zsh-autocomplete)
# -----------------------------------------------------------------------------
# Set the value for all.
zstyle -e ':autocomplete:*' list-lines 'reply=( $(( LINES / 3 )) )'
# Override autocompletion.
zstyle -e ':autocomplete:list-choices:*' list-lines 'reply=( $(( LINES / 3 )) )'
# Override history menu.
zstyle -e ':autocomplete:history-search-backward:*' list-lines 'reply=( $(( LINES / 2 )) )'
# Override history search.
zstyle -e ':autocomplete:history-incremental-search-backward:*' list-lines 'reply=( $(( LINES / 2 )) )'
source ~/.zsh/zsh-autocomplete/zsh-autocomplete.plugin.zsh

# -----------------------------------------------------------------------------
# FAST SYNTAX HIGHLIGHTING (https://github.com/zdharma-continuum/fast-syntax-highlighting)
# -----------------------------------------------------------------------------
source ~/.zsh/fast-syntax-highlighting/F-Sy-H.plugin.zsh

# -----------------------------------------------------------------------------
# COLORED MAN PAGES (https://github.com/ael-code/zsh-colored-man-pages)
# -----------------------------------------------------------------------------
source ~/.zsh/zsh-colored-man-pages/colored-man-pages.plugin.zsh && man less 2>&1 > /dev/null

# -----------------------------------------------------------------------------
# FZF DIR NAVIGATOR (https://github.com/KulkarniKaustubh/fzf-dir-navigator)
# -----------------------------------------------------------------------------
source ~/.zsh/fzf-dir-navigator/fzf-dir-navigator.plugin.zsh
bindkey "^f" fzf-dir-navigator

# -----------------------------------------------------------------------------
# ALIAS TIPS (https://github.com/djui/alias-tips)
# -----------------------------------------------------------------------------
source ~/.zsh/alias-tips/alias-tips.plugin.zsh
export ZSH_PLUGINS_ALIAS_TIPS_TEXT="alias  "

# -----------------------------------------------------------------------------
# BD (https://github.com/Tarrasch/zsh-bd)
# -----------------------------------------------------------------------------
source ~/.zsh/zsh-bd/bd.zsh

# ctrl-z that is ambidextrous (foregrounds and backgrounds)
# -----------------------------------------------------------------------------
# not really a plugin, but comes from oh-my-zsh
# -----------------------------------------------------------------------------
fancy-ctrl-z () {
if [[ $#BUFFER -eq 0 ]]; then
  BUFFER="fg"
  zle accept-line -w
else
  zle push-input -w
  zle clear-screen -w
fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

# -----------------------------------------------------------------------------
# GIT PROMPT & PROMPT CUSTOMIZATION
# -----------------------------------------------------------------------------
setopt prompt_subst
source ~/.zsh/zsh-git-prompt/zshrc.sh

# venv automatic activation
export VIRTUAL_ENV_DISABLE_PROMPT=1
_virtualenv_auto_activate() {
  if [[ -z "$VIRTUAL_ENV" ]] ; then
    ## If env folder is found then activate the virtualenv
    if [[ -d ./.venv ]] ; then
      source ./.venv/bin/activate
      export VENV_NAME="[venv:%F{#FF44C9}$(printf $(basename $(dirname $VIRTUAL_ENV)))%f]"
    fi
  else
    ## check the current folder belong to earlier VIRTUAL_ENV folder
    # if yes then do nothing
    # else deactivate
    parentdir="$(dirname "$VIRTUAL_ENV")"
    if [[ "$PWD"/ != "$parentdir"/* ]] ; then
      deactivate
      export VENV_NAME=''
    fi
  fi
}
precmd() { _virtualenv_auto_activate }

# conda automatic activation
export CONDACONFIGDIR=""
_condaenv_auto_activate() {
  if [[ -z "$CONDACONFIGDIR" ]] ; then
    if [ -f $PWD/.conda_config ]; then
      export CONDACONFIGDIR=$PWD
      conda activate $(cat .conda_config)
      export VENV_NAME="[conda_env:%F{#FF44C9}$(printf $(basename $CONDA_PREFIX))%f]"
    fi
  else
    if [[ "$PWD"/ != "$CONDACONFIGDIR"/* ]]; then
      export CONDACONFIGDIR=""
      conda deactivate
      export VENV_NAME=''
    fi
  fi
}
precmd() { _condaenv_auto_activate }

# overrides for git-prompt
ZSH_THEME_GIT_PROMPT_PREFIX="["
ZSH_THEME_GIT_PROMPT_SUFFIX="]%f"
ZSH_THEME_GIT_PROMPT_SEPARATOR="|"
ZSH_THEME_GIT_PROMPT_BRANCH="%F{#44A6FF}"
ZSH_THEME_GIT_PROMPT_STAGED="%{$fg[green]%}%{%G+%}"
ZSH_THEME_GIT_PROMPT_CONFLICTS="%{$fg[red]%}%{%G×%}"
ZSH_THEME_GIT_PROMPT_CHANGED="%{$fg[yellow]%}%{%G~%}"
ZSH_THEME_GIT_PROMPT_BEHIND="%{$fg[yellow]%}%{↓%G%}"
ZSH_THEME_GIT_PROMPT_AHEAD="%{$fg[green]%}%{↑%G%}"
ZSH_THEME_GIT_PROMPT_UNTRACKED="%{$fg[magenta]%}%{%G?%}"
ZSH_THEME_GIT_PROMPT_CLEAN="%{%F{#44A6FF}%}%{_%G%}"

export PS1='[%F{#A9A9A9}%n%f%F{#595959}@%f%F{#A9A9A9}$(my_ip)%f%k]%B$(git_super_status)%b$VENV_NAME%f[/$(depth_pwd)] $ '

# helper functions used above
depth_pwd() {
  pwd_array=(`echo $(echo $PWD) | sed 's/\//\n/g'`)

  for (( i=1 ; i<=${#pwd_array[@]} ; i++ ))
  do
    Kcolor=$(num_to_hex $((- 25 + 10 * $i)) $((- 25 + 16 * $i)) $((- 25 + 25 * $i)))
    Fcolor=$(num_to_hex $((255 - 6 * $i)) $((100 - 10 * $i)) $((80 - 15 * $i)))
    colored_pwd_array[i]="%F{$Fcolor}%K{$Kcolor}${pwd_array[i]}%f/%k"
  done

  echo "${colored_pwd_array[@]}" | sed 's/ //g'
}

num_to_hex() {
  red=$1
  green=$2
  blue=$3

  hex_set=()
  for color in $red $green $blue
  do
    # bound our colors
    if [ $color -ge 255 ]; then
      color=255
    elif [ $color -le 0 ]; then
      color=0
    fi

    # account for single digit hex values
    if [ $color -le 15 ]; then
      hex_set+=0
    fi
    hex_set+=$(printf '%x' $color)
  done

  echo "#${hex_set[@]}" | sed 's/ //g'
}

my_ip(){
  ip -o route get to 8.8.8.8 | sed -n 's/.*src \([0-9.]\+\).*/\1/p'
}
